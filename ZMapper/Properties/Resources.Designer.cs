//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZMapper.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ZMapper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D0 {
            get {
                object obj = ResourceManager.GetObject("D0", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D1 {
            get {
                object obj = ResourceManager.GetObject("D1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D2 {
            get {
                object obj = ResourceManager.GetObject("D2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D3 {
            get {
                object obj = ResourceManager.GetObject("D3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D4 {
            get {
                object obj = ResourceManager.GetObject("D4", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D5 {
            get {
                object obj = ResourceManager.GetObject("D5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D6 {
            get {
                object obj = ResourceManager.GetObject("D6", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D7 {
            get {
                object obj = ResourceManager.GetObject("D7", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D8 {
            get {
                object obj = ResourceManager.GetObject("D8", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap D9 {
            get {
                object obj = ResourceManager.GetObject("D9", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DPOI {
            get {
                object obj = ResourceManager.GetObject("DPOI", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DPOIMini {
            get {
                object obj = ResourceManager.GetObject("DPOIMini", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DPOISelector {
            get {
                object obj = ResourceManager.GetObject("DPOISelector", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Help {
            get {
                object obj = ResourceManager.GetObject("Help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;&lt;body&gt;
        ///&lt;h2&gt;ZMapper #version&lt;/h2&gt;
        ///&lt;p&gt;This software is free to use, distribute, and modify. See &lt;a href=&quot;page://license&quot;&gt;License Information&lt;/a&gt; for more information.&lt;/p&gt;
        ///&lt;p&gt;Source is available on &lt;a href=&quot;https://github.com/snarfblam/ZMapper/&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
        ///&lt;p&gt;&amp;nbsp;&lt;/p&gt;
        ///&lt;h3&gt;Help Topics&lt;/h3&gt;
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;a href=&quot;page://input&quot;&gt;Input&lt;/a&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;a href=&quot;page://options&quot;&gt;Options&lt;/a&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;a href=&quot;page://license&quot;&gt;License Information&lt;/a&gt;&lt;/li&gt;
        ///&lt;/ul&gt;
        ///&lt;/body&gt;&lt;/html&gt;.
        /// </summary>
        internal static string HelpAbout {
            get {
                return ResourceManager.GetString("HelpAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to html {
        ///    margin: 0;
        ///    padding: 0px;
        ///}
        ///
        ///body {
        ///    margin: 0px;
        ///    padding-left: 10px;
        ///}
        ///
        ///h3 {
        ///    margin: 0;
        ///    text-decoration: underline;
        ///}
        ///
        ///h3, h4, h5, p, ul, ol {
        ///    margin-left: 0px;
        ///    margin-bottom: 0.5em;
        ///    margin-top: 0;
        ///    margin-right: 10px
        ///}
        ///
        ///p, div.p {
        ///    margin-left: 0px;
        ///}
        ///
        ///li {
        ///    margin-left: 18px;
        ///}
        ///
        ///h2 {
        ///    margin-left: -10px;
        ///    padding: 8px;
        ///    margin-top: 0px;
        ///    background-color: #BECDE0;
        ///}
        ///
        ///h3 {
        ///    font-size: 20px;
        ///    margin-t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpCSS {
            get {
                return ResourceManager.GetString("HelpCSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;&lt;body&gt;
        ///&lt;p class=&quot;help-home&quot;&gt;&lt;a href=&quot;page://about&quot;&gt;&lt;img src=&quot;img://help&quot; class=&quot;help&quot;&gt;Help Home&lt;/a&gt;&lt;/p&gt;
        ///&lt;h2&gt;Input&lt;/h2&gt;
        ///Contents:
        ///&lt;ol&gt;
        ///&lt;li&gt;&lt;a href=&quot;#kb&quot;&gt;Keyboard Input&lt;/a&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;a href=&quot;#mouse&quot;&gt;Mouse Input&lt;/a&gt;&lt;/li&gt;
        ///&lt;/ol&gt;
        ///
        ///&lt;h3&gt;&lt;a id=&quot;kb&quot;&gt;Keyboard Input&lt;/a&gt;&lt;/h3&gt;
        ///&lt;p&gt;ZMapper uses global hotkeys for input. That means that while ZMapper input is active (red circle in icon), the keys that ZMapper uses will not work with any other applications. You can configure when ZMapper input is active via &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpInput {
            get {
                return ResourceManager.GetString("HelpInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;&lt;body&gt;
        ///&lt;p class=&quot;help-home&quot;&gt;&lt;a href=&quot;page://about&quot;&gt;&lt;img src=&quot;img://help&quot; class=&quot;help&quot;&gt;Help Home&lt;/a&gt;&lt;/p&gt;
        ///&lt;h2&gt;License Information&lt;/h2&gt;
        ///&lt;p&gt;ZMapper may be used and distributed without restriction. ZMapper source code, except for third-party components and code, is released under The Unlicense. It may used, modified, and distributed freely.&lt;/p&gt;
        ///&lt;blockquote&gt;
        ///&lt;p&gt;This is free and unencumbered software released into the public domain.&lt;/p&gt;
        ///&lt;p&gt;Anyone is free to copy, modify, publish, use, compile, sell, or [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpLicense {
            get {
                return ResourceManager.GetString("HelpLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;&lt;body&gt;
        ///&lt;h2&gt;Not Found&lt;/h2&gt;
        ///&lt;p&gt;The specified help topic was not found.&lt;/p&gt;
        ///&lt;/body&gt;&lt;/html&gt;.
        /// </summary>
        internal static string HelpNotFound {
            get {
                return ResourceManager.GetString("HelpNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;&lt;body&gt;
        ///&lt;p class=&quot;help-home&quot;&gt;&lt;a href=&quot;page://about&quot;&gt;&lt;img src=&quot;img://help&quot; class=&quot;help&quot;&gt;Help Home&lt;/a&gt;&lt;/p&gt;
        ///&lt;h2&gt;Options&lt;/h2&gt;
        ///&lt;h4&gt;Input Always Enabled&lt;/h4&gt;
        ///&lt;p&gt;With this setting, hotkeys are always enabled and will always override all other applications as long as ZMapper is open.&lt;/p&gt;
        ///&lt;h4&gt;Enabled For Window Caption&lt;/h4&gt;
        ///&lt;p&gt;This setting will enable ZMapper hotkeys only for windows with specific captions. For example, if you use Mesen, you might want to use the pattern &lt;code&gt;Mesen*&lt;/code&gt;. If you use mu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpOptions {
            get {
                return ResourceManager.GetString("HelpOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) 2009, José Manuel Menéndez Poo
        ///Copyright (c) 2013, Arthur Teplitzki
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without modification,
        ///are permitted provided that the following conditions are met:
        ///
        ///  Redistributions of source code must retain the above copyright notice, this
        ///  list of conditions and the following disclaimer.
        ///
        ///  Redistributions in binary form must reproduce the above copyright notice, this
        ///  list of conditions and the following dis [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HTMLRendererLicense {
            get {
                return ResourceManager.GetString("HTMLRendererLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap img_input {
            get {
                object obj = ResourceManager.GetObject("img_input", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Input2 {
            get {
                object obj = ResourceManager.GetObject("Input2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] ItemLayout {
            get {
                object obj = ResourceManager.GetObject("ItemLayout", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap items0 {
            get {
                object obj = ResourceManager.GetObject("items0", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap items1 {
            get {
                object obj = ResourceManager.GetObject("items1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap items2 {
            get {
                object obj = ResourceManager.GetObject("items2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap items3 {
            get {
                object obj = ResourceManager.GetObject("items3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap marks {
            get {
                object obj = ResourceManager.GetObject("marks", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap marksDungeon {
            get {
                object obj = ResourceManager.GetObject("marksDungeon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap OWPOI {
            get {
                object obj = ResourceManager.GetObject("OWPOI", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap OWPOIMini {
            get {
                object obj = ResourceManager.GetObject("OWPOIMini", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap OWPOISelector {
            get {
                object obj = ResourceManager.GetObject("OWPOISelector", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RedDot {
            get {
                object obj = ResourceManager.GetObject("RedDot", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap unvisited {
            get {
                object obj = ResourceManager.GetObject("unvisited", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap unvisitedDungeon {
            get {
                object obj = ResourceManager.GetObject("unvisitedDungeon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap visited {
            get {
                object obj = ResourceManager.GetObject("visited", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap visitedDungeon {
            get {
                object obj = ResourceManager.GetObject("visitedDungeon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon ZMap {
            get {
                object obj = ResourceManager.GetObject("ZMap", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon ZMapRed {
            get {
                object obj = ResourceManager.GetObject("ZMapRed", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
